services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=${GROQ_MODEL:-llama3-8b-8192}
      - ADMIN_PIN=${ADMIN_PIN:-0000}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_change_in_production}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test service for running comprehensive tests
  test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=test
      - PORT=3001
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=${GROQ_MODEL:-llama3-8b-8192}
      - ADMIN_PIN=${ADMIN_PIN:-0000}
      - JWT_SECRET=${JWT_SECRET:-test_jwt_secret}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    command: npm test
    profiles:
      - test

networks:
  app-network:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules:
